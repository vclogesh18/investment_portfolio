name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Test and Build
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_DB: seven_boson_cms_test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install main dependencies
      run: npm ci

    - name: Install backend dependencies
      run: |
        cd backend
        npm ci

    - name: Install admin panel dependencies
      run: |
        cd admin-panel
        npm ci

    - name: Setup test database
      run: |
        PGPASSWORD=postgres psql -h localhost -U postgres -d seven_boson_cms_test -f database/schema.sql
      env:
        PGPASSWORD: postgres

    - name: Run linting
      run: |
        npm run lint
        cd backend && npm run lint || true
        cd ../admin-panel && npm run lint || true

    - name: Build main website
      run: npm run build

    - name: Build admin panel
      run: |
        cd admin-panel
        npm run build

    - name: Run backend tests
      run: |
        cd backend
        npm test || true
      env:
        NODE_ENV: test
        DB_HOST: localhost
        DB_PORT: 5432
        DB_NAME: seven_boson_cms_test
        DB_USER: postgres
        DB_PASSWORD: postgres
        JWT_SECRET: test_jwt_secret_for_ci

    - name: Setup E2E test dependencies
      run: |
        cd e2e-tests
        npm ci
        npx playwright install

    - name: Run E2E tests
      run: |
        cd e2e-tests
        npm test || true
      env:
        NODE_ENV: test
        DB_HOST: localhost
        DB_PORT: 5432
        DB_NAME: seven_boson_cms_test
        DB_USER: postgres
        DB_PASSWORD: postgres

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-node-${{ matrix.node-version }}
        path: |
          e2e-tests/test-results/
          e2e-tests/playwright-report/

  security:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'

    - name: Run security audit - Main
      run: npm audit --audit-level moderate

    - name: Run security audit - Backend
      run: |
        cd backend
        npm audit --audit-level moderate

    - name: Run security audit - Admin Panel
      run: |
        cd admin-panel
        npm audit --audit-level moderate

  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: [test, security]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: Install dependencies
      run: |
        npm ci
        cd backend && npm ci
        cd ../admin-panel && npm ci

    - name: Build for production
      run: |
        npm run build
        cd admin-panel && npm run build

    - name: Create deployment package
      run: |
        mkdir -p deploy
        cp -r dist deploy/
        cp -r admin-panel/dist deploy/admin-panel
        cp -r backend deploy/
        cp database/schema.sql deploy/
        cp package.json deploy/
        cp README.md deploy/

    - name: Upload deployment artifact
      uses: actions/upload-artifact@v4
      with:
        name: deployment-package
        path: deploy/

    # Add your deployment steps here
    # Example for various hosting providers:
    
    # - name: Deploy to Vercel
    #   uses: amondnet/vercel-action@v25
    #   with:
    #     vercel-token: ${{ secrets.VERCEL_TOKEN }}
    #     vercel-org-id: ${{ secrets.ORG_ID }}
    #     vercel-project-id: ${{ secrets.PROJECT_ID }}

    # - name: Deploy to Netlify
    #   uses: nwtgck/actions-netlify@v2.0
    #   with:
    #     publish-dir: './dist'
    #     production-branch: main
    #   env:
    #     NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
    #     NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}

    # - name: Deploy to AWS S3
    #   run: |
    #     aws s3 sync ./dist s3://${{ secrets.S3_BUCKET }} --delete
    #   env:
    #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #     AWS_REGION: ${{ secrets.AWS_REGION }}